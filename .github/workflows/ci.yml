name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}  # permite "Run workflow" manual

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Show tree (debug)
        run: |
          echo "PWD:"; pwd
          echo "ROOT:"; ls -la
          echo "pyproject.toml:"; (cat pyproject.toml || echo "NO pyproject.toml")
          echo "ruff.toml:"; (cat ruff.toml || echo "NO ruff.toml")

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps (explicit)
        run: |
          python -m pip install --upgrade pip
          pip install "ruff>=0.5" "black>=24.4" "mypy>=1.10" "pytest>=8.2" "pytest-cov>=5.0" "coverage[toml]" httpx
          # alternativamente:
          # pip install -r requirements.txt

      - name: Tool versions
        run: |
          ruff --version
          black --version
          mypy --version
          pytest --version

      - name: Lint (ruff) — show-config
        run: ruff config --config ruff.toml || true

      - name: Lint (ruff)
        run: ruff check . --config ruff.toml

      - name: Format check (black)
        run: black --check .

      - name: Type check (mypy)
        run: mypy --explicit-package-bases app sdk

      - name: Tests + Coverage
        run: |
          pytest -q --cov --cov-report=term-missing
          pytest --cov --cov-report=html

      - name: Upload coverage HTML
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: htmlcov

      - name: Summary
        run: |
          echo "### ✅ CI Passed" >> $GITHUB_STEP_SUMMARY
          echo "- Ruff, Black, Mypy, Pytest ejecutados." >> $GITHUB_STEP_SUMMARY
          echo "- Reporte HTML de cobertura en Artifacts (coverage-html)." >> $GITHUB_STEP_SUMMARY
